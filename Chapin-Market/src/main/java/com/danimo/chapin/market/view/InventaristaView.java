/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.danimo.chapin.market.view;

import com.danimo.chapin.market.daoImpl.BodegaDaoImpl;
import com.danimo.chapin.market.daoImpl.EmpleadoDaoImpl;
import com.danimo.chapin.market.daoImpl.EstanteriaDaoImpl;
import com.danimo.chapin.market.daoImpl.ProductoDaoImpl;
import com.danimo.chapin.market.model.Bodega;
import com.danimo.chapin.market.model.Estanteria;
import com.danimo.chapin.market.model.Producto;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import java.util.ArrayList;

import static com.danimo.chapin.market.enums.Sucursal.getIdSucursal;

/**
 *
 * @author danimo
 */
public class InventaristaView extends javax.swing.JInternalFrame {
    private int id_empleado;
    /**
     * Creates new form InventaristaView
     */
    public InventaristaView(int id) throws PropertyVetoException {
        initComponents();
        this.setMaximum(true);
        this.setResizable(true);
        this.id_empleado=id;
        this.mostrarProductosBodegaSucursal();
        this.mostrarProductosEstanteriaSucursal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name_inventarista_txt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Bienvenido Inventarista:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 45, -1, -1));

        name_inventarista_txt.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        getContentPane().add(name_inventarista_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 290, 30));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Producto en Estanteria:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 100, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 860, 450));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("Productos en bodega");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setEnabled(false);
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 160, 890, 440));

        jMenu1.setText("Ingreso");

        jMenuItem2.setText("Ingreso a Estanteria");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cerrar");

        jMenuItem1.setText("Cerrar Sesion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Main.MainP.removeAll();
        Main.MainP.repaint();
        Login login = null;
        try {
            login = new Login();
            login.setVisible(true);
            Main.MainP.add(login);
            Main.MainP.moveToFront(login);

        } catch (PropertyVetoException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void mostrarProductosBodegaSucursal(){
        // TODO aqui se mostraran los productos en bodega de la sucursal:
        try{
            ArrayList<Bodega> productos_bodega= new BodegaDaoImpl().obtenerProductosSucursal(getIdSucursal(new EmpleadoDaoImpl().obtenerPorId(this.id_empleado).getSucursal_id()));
            //TODO mostrar los productos de la bodega en la JTable1
            ProductoDaoImpl productoDao= new ProductoDaoImpl();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Codigo");
            modelo.addColumn("Nombre");
            modelo.addColumn("Precio");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Marca");
            for (Bodega producto: productos_bodega) {
                Producto pro_actu= productoDao.obtenerPorId(producto.getProducto());
                modelo.addRow(new Object[]{
                        pro_actu.getCodigo_producto(),
                        pro_actu.getNombre(),
                        pro_actu.getPrecio(),
                        pro_actu.getDescripcion(),
                        producto.getCantidad(),
                        pro_actu.getMarca()
                });
            }
            //TODO mostrar los productos de la bodega en la JTable1
            this.jTable1.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    if ( e.getClickCount()==2){
                        int row = jTable1.rowAtPoint(e.getPoint());
                        int col = jTable1.columnAtPoint(e.getPoint());
                        if (row >= 0 && col >= 0) {
                            JOptionPane.showMessageDialog(null, "Se ha seleccionado el producto: "+ jTable1.getValueAt(row,0));
                            cambiarAEstanteria(Integer.parseInt(jTable1.getValueAt(row,0).toString()));
                        }
                    }
                }
            });

            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            jTable1.setModel(modelo);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al mostrar los productos de la bodega");
            e.printStackTrace();
        }

    }

    public void mostrarProductosEstanteriaSucursal(){
        try{
            ArrayList<Estanteria> productos_estanteria= new EstanteriaDaoImpl().obtenerProductosEstanterias(getIdSucursal(new EmpleadoDaoImpl().obtenerPorId(this.id_empleado).getSucursal_id()));
            //TODO mostrar los productos de la bodega en la JTable1
            ProductoDaoImpl productoDao= new ProductoDaoImpl();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Codigo");
            modelo.addColumn("Nombre");
            modelo.addColumn("Precio");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Marca");
            modelo.addColumn("No Pasillo");
            for (Estanteria producto: productos_estanteria) {
                Producto pro_actu= productoDao.obtenerPorId(producto.getProducto());
                modelo.addRow(new Object[]{
                        pro_actu.getCodigo_producto(),
                        pro_actu.getNombre(),
                        pro_actu.getPrecio(),
                        pro_actu.getDescripcion(),
                        producto.getCantidad(),
                        pro_actu.getMarca(),
                        producto.getNo_pasillo()
                });
            }
            //TODO mostrar los productos de la bodega en la JTable1
            jTable2.setModel(modelo);


        }catch (Exception e){
            e.printStackTrace();
        }
    }

    public void cambiarAEstanteria(int id_producto){
        Bodega producto_bodega= new BodegaDaoImpl().obtenerProducto(getIdSucursal(new EmpleadoDaoImpl().obtenerPorId(this.id_empleado).getSucursal_id()),id_producto);
        if (producto_bodega != null){
            //TODO Pedir al usuario mediante un JOPTIONPANE la cantidad que se va a pasar a estanteria
            int cantidad= Integer.parseInt(JOptionPane.showInputDialog("Ingrese la cantidad que se va a pasar a estanteria"));
            if(producto_bodega.getCantidad()<cantidad){
                JOptionPane.showMessageDialog(null, "No existen suficientes unidades");
            }else{
                //TODO verificar que existan suficientes unidades en bodega para pasar a estanteria
                //TODO verificar que exista el producto en estanteria
                Estanteria producto_estanteria= new EstanteriaDaoImpl().obtenerProducto(getIdSucursal(new EmpleadoDaoImpl().obtenerPorId(this.id_empleado).getSucursal_id()),id_producto);
                if (producto_estanteria != null){
                    //TODO si existe el producto en estanteria se actualizara la cantidad
                    producto_estanteria.setCantidad(producto_estanteria.getCantidad()+cantidad);
                    producto_bodega.setCantidad(producto_bodega.getCantidad()-cantidad);
                    new EstanteriaDaoImpl().actualizar(producto_estanteria);
                    new BodegaDaoImpl().actualizar(producto_bodega);
                    JOptionPane.showMessageDialog(null, "Se ha actualizado la cantidad del producto en estanteria");
                    this.mostrarProductosBodegaSucursal();
                    this.mostrarProductosEstanteriaSucursal();
                }else{
                    //TODO si no existe el producto en estanteria se creara un nuevo registro
                    //TODO solicito el numero de pasillo donde se esta registrando el producto
                    int no_pasillo= Integer.parseInt(JOptionPane.showInputDialog("Ingrese el numero de pasillo donde se va a registrar el producto"));
                    new EstanteriaDaoImpl().insertar(new Estanteria(getIdSucursal(new EmpleadoDaoImpl().obtenerPorId(this.id_empleado).getSucursal_id()),id_producto,cantidad, no_pasillo ));
                    producto_bodega.setCantidad(producto_bodega.getCantidad()-cantidad);
                    new BodegaDaoImpl().actualizar(producto_bodega);
                    JOptionPane.showMessageDialog(null, "Se ha creado un nuevo registro en estanteria");
                    this.mostrarProductosBodegaSucursal();
                    this.mostrarProductosEstanteriaSucursal();
                }
            }

        }else{
            JOptionPane.showMessageDialog(null,"No existe el producto en bodega");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    public static javax.swing.JLabel name_inventarista_txt;
    // End of variables declaration//GEN-END:variables
}
